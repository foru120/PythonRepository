print('')
print('====================================================================================================')
print('== 문제 117. 구구단 2단을 출력하시오!')
print('====================================================================================================')
for j in range(1, 10):
    print('2 * ' + str(j) + ' = ' + str(2*j))


print('')
print('====================================================================================================')
print('== 문제 118. 아래의 결과를 출력하시오!')
print('====================================================================================================')
for i in range(10):
    print('★'*i)


print('')
print('====================================================================================================')
print('== 문제 119. 아래와 같이 출력하시오!')
print('====================================================================================================')
for i in range(10, 0, -1):
    print('★'*i)


print('')
print('====================================================================================================')
print('== 문제 120. 아래와 같이 출력하시오!')
print('====================================================================================================')
sNum = 1
eNum = 12
for i in range(sNum, eNum):
    if i <= eNum/2:
        print('  '*(int(eNum/2)-i), '★'*(2*i-1))
    else:
        print('  '*(i-round(eNum/2)), '★'*(2*(eNum-i)-1))


print('')
print('====================================================================================================')
print('== 문제 121. 중첩 for loop 문을 이용해서 ★ 로 사각형을 만드시오!')
print('====================================================================================================')
width = int(input('가로의 숫자를 입력하세요 : '))
height = int(input('세로의 숫자를 입력하세요 : '))
for i in range(width):
    print('★'*height)

for i in range(width):
    for j in range(height):
        print('★', end='')
    print('')

print('')
print('====================================================================================================')
print('== 문제 122. 구구단을 가로로 출력하시오.')
print('====================================================================================================')
for j in range(1, 10):
    for i in range(2, 10):
        print(str(i) + ' * ' + str(j) + ' = ' + str(i*j), end='\t')
    print('')


print('')
print('====================================================================================================')
print('== 문제 123. for loop 문을 이용해서 power 함수를 구현하시오!')
print('====================================================================================================')
base = int(input('밑수를 입력하세요 : '))
jisu = int(input('지수를 입력하세요 : '))
num = 1

for i in range(1, jisu+1):
    num *= base
print(num)

# ■ 숫자, 문자, 공백이 얼마나 있는지 확인하는 방법
s = 'some things'
numbers = sum(i.isdigit() for i in s)
words = sum(i.isalpha() for i in s)
spaces = sum(i.isspace() for i in s)
print(numbers, words, spaces)


print('')
print('====================================================================================================')
print('== 문제 124. 겨울왕국 대본에는 숫자가 몇 개나 있는가?')
print('====================================================================================================')
from PythonClass.common_func import CommonFunc
cnt = 0
for winterData in CommonFunc.returnTxtData('winter.txt'):
    cnt += sum(tuple([i.isdigit() for i in winterData]))
print(cnt)


print('')
print('====================================================================================================')
print('== 문제 125. 겨울왕국에 특수문자가 몇 개나 포함되어져 있는지 확인하시오!')
print('====================================================================================================')
from PythonClass.common_func import CommonFunc
cnt = 0
for winterData in CommonFunc.returnTxtData('winter.txt'):
    cnt += [sum((word.isdigit(), word.isalpha(), word.isspace())) for word in winterData.strip()].count(0)
print(cnt)


print('')
print('====================================================================================================')
print('== 문제 126. 숫자를 물어보게하고 숫자를 입력하면 해당 숫자만큼 아래와 같은 그림이 그려지게 하시오!')
print('====================================================================================================')
num = int(input('숫자를 입력하세요.'))
i = num-1

while True:
    print(' '*i, '*'*(2*(num-i)-1))
    i -= 1
    if i < 0:
        break


print('')
print('====================================================================================================')
print('== 문제 127. 팩토리얼을 while loop 문으로 구현하시오!')
print('====================================================================================================')
num = int(input('팩토리얼 숫자를 입력하세요.'))
sum = 1
while num > 0:
    sum *= num
    num -= 1
print(sum)


print('')
print('====================================================================================================')
print('== 문제 128. log 함수를 파이썬으로 구현하시오!')
print('====================================================================================================')
base = int(input('밑수를 입력하시오.'))
jinsu = int(input('진수를 입력하시오.'))
log_val = 0

while jinsu > 1:
    log_val += 1
    jinsu = jinsu/base

print(log_val)


print('')
print('====================================================================================================')
print('== 문제 129. 두 수를 입력받아서 최대 공약수를 구하시오.')
print('====================================================================================================')
def returnGCD(num1, num2):
    max_num = max([num1, num2])
    i = 1
    gcd = 1
    while True:
        i += 1
        if (num1 % i == 0) and (num2 % i == 0):
            num1 /= i
            num2 /= i
            gcd *= i
            i = 1
        if max_num == i:
            break

    return gcd

num1 = int(input('첫 번째 수를 입력하세요.'))
num2 = int(input('두 번째 수를 입력하세요.'))

print(returnGCD(num1, num2))


print('')
print('====================================================================================================')
print('== 문제 130. (마지막 문제)두 수를 입력받아서 최대 공약수를 구하시오.')
print('====================================================================================================')
# 소인수 분해
def returnGCD(num_list):
    num_list = list(map(lambda x: int(x), num_list))
    max_num = max(num_list)

    i = 2
    gcd = 1  # 최대 공약수
    cnt = 0

    while True:
        # 입력 받은 수에 대해 특정 i 값으로 나눈값이 모두 0인 것을 찾는 루프문
        for num in num_list:
            if num % i == 0:
                cnt += 1

        # 특정 i 값에 대해 입력 받은 모든 수가 다 나누어졌는지 확인
        if cnt == len(num_list):
            gcd *= i  # 최대공약수
            num_list = list(map(lambda x: x/i, num_list))  # 입력받은 수
            i = 1  # i 값 리셋

        i += 1  # i 값 증가
        cnt = 0  # cnt 리셋

        if i == max(num_list):
            break

    return gcd

num_list = input('최대 공약수를 알고 싶은 n개의 숫자를 입력하세요.').split(' ')

print(returnGCD(num_list))


print('')
print('====================================================================================================')
print('== 문제 131. 숫자를 1부터 10까지 출력하는데 중간에 5는 나오지 않게 하시오!')
print('====================================================================================================')
for i in range(1, 11):
    if i == 5:
        continue
    print(i)


print('')
print('====================================================================================================')
print('== 문제 132. 함수를 생성하는데 아래와 같이 숫자를 넣어서 실행하면 해당 숫자만큼 숫자가 세로로 출력되게 하시오.')
print('====================================================================================================')
def break_fun(num):
    i = 1
    while True:
        if i == num:
            break
        print(i)
        i += 1

break_fun(10)


print('')
print('====================================================================================================')
print('== 문제 133. 위의 함수를 수정해서 결과가 아래와 같이 가로로 출력되게 하시오.')
print('====================================================================================================')
def break_fun(num):
    i = 1
    while True:
        if i == num:
            break
        print(i, end=' ')
        i += 1

break_fun(10)